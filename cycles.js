// Задача 1
// Какое последнее значение выведет этот код? Почему?
// let i = 3;
// while (i) {
//   alert( i-- );
// }
1


// Задача 2
// Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.
// Оба цикла выводят alert с одинаковыми значениями или нет?
// Префиксный вариант ++i:
// let i = 0;
// while (++i < 5) alert(i);
1; 2; 3; 4;//5 не < 5 ,сначала увеличение - потом сравнение 


// Постфиксный вариант i++
// let i = 0;
// while (i++ < 5) alert( i );
1; 2; 3; 4; 5;// когда дойдем до 4 - 4 < 5, по этому последняя 5(сначала сравнение, потом увеличение)

// Задача 3
// Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.
// Оба цикла выведут alert с одинаковыми значениями или нет?
// Постфиксная форма:
// for (let i = 0; i < 5; i++) alert(i);

// Префиксная форма:
// for (let i = 0; i < 5; ++i) alert( i );
0; 1; 2; 3; 4; - в обоих случаях

// Задача 4
// При помощи цикла for выведите чётные числа от 2 до 10.

for (let i = 2; i <= 10; i++){
 if (i % 2 == 0) {
   console.log(i);
  }
}

// Задача 5
// Перепишите код, заменив цикл for на while, без изменения поведения цикла.
// for (let i = 0; i < 3; i++) {
//   alert( `number ${i}!` );

let i = 0;
while (i < 3) {
  alert(`number ${i}!`);
  i++;
}


// Задача 6
// Напишите цикл, который предлагает prompt ввести число, большее 100. Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.
// Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).
// Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно.
 
let x;
    do {  //выполнять тело цикла
      x = prompt("Введите число больше 100?"); //а именно вывод  prompt и запрос ввести число
    } while (x <= 100 && x !== null); //пока num меньше ли равно 100 и пока num  равно null
    //null это когда пользователь нажал отмена или esc
x = null;//esc
x = '';//ok
x = '50';//50
x = '150';//150
x = '100';//100

// Задача 7
// Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
// Другими словами, n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток.
// Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.
// Напишите код, который выводит все простые числа из интервала от 2 до n.
// Для n = 10 результат должен быть 2,3,5,7.
// P.S. Код также должен легко модифицироваться для любых других интервалов.

// let n = 10;
// first: for (let i = 2; i <= n; i++) { // ставим метку для continue чтобы он знал с какого места вернуться к циклу
//     //ервый цикл вводим число которое проверяем
//     //пишем условие, i начиается с 2 работает пока не станет равно n и каждую итерацию увеличивается на 1
//   for (let j = 2; j < i; j++) { //вложенный цикл это цикл который проверяет на что мы можем поделить наше проверяемое число
//     //тоже начинаем с 2 так как на 1 итак все делиться дальше цикл проверятся до числа на единицу меньшее чем проверяемое
//     //так как число само на себя итак делиться
//     if (i % j == 0) { //дальше пишем, что если остаток от деления равен 0
//         //то есть число разделилось на другое число, а значит оно не простое
//       continue first; //а значит нет смысла дльше проверять, мы прерываем цикл и идем сразу к верхнему циклу и берем следующее число
//     }
//   }
//   console.log(i); //если же у нас условие вложенного цикл не сработала и цикл не прервался а полностью отработал, значит число ни на что не поделилось
//   //а значит оно простое  мы выводим его в консоль, и переходим к следующему числу
// }

let n = 10;
for (let i = 2; i <= n; i++) {
  let isPrime = true;
  for (let j = 2; j < i; j++) {
    if (i % j == 0) { 
     isPrime = false;
    } 
  }
  if (isPrime){
    console.log(i);
  }
}